import{d as u,s as De,l as Ne,S as z,_ as o,g as ge,a as C,O as Pe,p as ee,c as Me,J as Ue,b as Oe,e as Be,m as Le,B as te,f as ke,h as He,i as Ke,W as H,A as We,C as Ve,j as xe,k as v,n as j,o as X,q as K,r as qe,t as ie}from"./index-BmrTDOwT.js";function Fe(t,e){if(t==null)return{};var i={};for(var s in t)if({}.hasOwnProperty.call(t,s)){if(e.includes(s))continue;i[s]=t[s]}return i}function Ge(t,e){if(t==null)return{};var i,s,n=Fe(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(s=0;s<r.length;s++)i=r[s],e.includes(i)||{}.propertyIsEnumerable.call(t,i)&&(n[i]=t[i])}return n}var T={rpc:{invalidInput:-32e3,resourceNotFound:-32001,resourceUnavailable:-32002,transactionRejected:-32003,methodNotSupported:-32004,limitExceeded:-32005,parse:-32700,invalidRequest:-32600,methodNotFound:-32601,invalidParams:-32602,internal:-32603},provider:{userRejectedRequest:4001,unauthorized:4100,unsupportedMethod:4200,disconnected:4900,chainDisconnected:4901}},se={"-32700":{standard:"JSON RPC 2.0",message:"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."},"-32600":{standard:"JSON RPC 2.0",message:"The JSON sent is not a valid Request object."},"-32601":{standard:"JSON RPC 2.0",message:"The method does not exist / is not available."},"-32602":{standard:"JSON RPC 2.0",message:"Invalid method parameter(s)."},"-32603":{standard:"JSON RPC 2.0",message:"Internal JSON-RPC error."},"-32000":{standard:"EIP-1474",message:"Invalid input."},"-32001":{standard:"EIP-1474",message:"Resource not found."},"-32002":{standard:"EIP-1474",message:"Resource unavailable."},"-32003":{standard:"EIP-1474",message:"Transaction rejected."},"-32004":{standard:"EIP-1474",message:"Method not supported."},"-32005":{standard:"EIP-1474",message:"Request limit exceeded."},4001:{standard:"EIP-1193",message:"User rejected the request."},4100:{standard:"EIP-1193",message:"The requested account and/or method has not been authorized by the user."},4200:{standard:"EIP-1193",message:"The requested method is not supported by this Ethereum provider."},4900:{standard:"EIP-1193",message:"The provider is disconnected from all chains."},4901:{standard:"EIP-1193",message:"The provider is disconnected from the specified chain."}};function Ye(t){return t==null}function V(t){return!!t&&typeof t=="object"&&!Array.isArray(t)}const F=(t,e)=>Object.hasOwnProperty.call(t,e);var $;(function(t){t[t.Null=4]="Null",t[t.Comma=1]="Comma",t[t.Wrapper=1]="Wrapper",t[t.True=4]="True",t[t.False=5]="False",t[t.Quote=1]="Quote",t[t.Colon=1]="Colon",t[t.Date=24]="Date"})($=$||($={}));function je(t){if(typeof t!="object"||t===null)return!1;try{let e=t;for(;Object.getPrototypeOf(e)!==null;)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(t)===e}catch{return!1}}function Xe(t){return typeof t=="object"&&t!==null&&"message"in t}function $e(t){return Xe(t)&&typeof t.message=="string"?t.message:Ye(t)?"":String(t)}function Ze(t){return typeof t?.prototype?.constructor?.name=="string"}function ze(t){return $e(t).replace(/\.$/u,"")}function Je(t,e){return Ze(t)?new t({message:e}):t({message:e})}class Qe extends Error{constructor(e){super(e.message),this.code="ERR_ASSERTION"}}function et(t,e,i="Assertion failed",s=Qe){try{u.assert(t,e)}catch(n){throw Je(s,`${i}: ${ze(n)}.`)}}const L=t=>u.object(t);function ne({path:t,branch:e}){const i=t[t.length-1];return F(e[e.length-2],i)}function x(t){return new u.Struct({...t,type:`optional ${t.type}`,validator:(e,i)=>!ne(i)||t.validator(e,i),refiner:(e,i)=>!ne(i)||t.refiner(e,i)})}const tt=()=>u.define("finite number",t=>u.is(t,u.number())&&Number.isFinite(t)),q=u.union([u.literal(null),u.boolean(),tt(),u.string(),u.array(u.lazy(()=>q)),u.record(u.string(),u.lazy(()=>q))]),B=u.coerce(q,u.any(),t=>(et(t,q),JSON.parse(JSON.stringify(t,(e,i)=>{if(!(e==="__proto__"||e==="constructor"))return i}))));function Z(t){try{return it(t),!0}catch{return!1}}function it(t){return u.create(t,B)}const st="2.0",k=u.literal(st),G=u.nullable(u.union([u.number(),u.string()])),ye=L({code:u.integer(),message:u.string(),data:x(B),stack:x(u.string())}),Ae=u.union([u.record(u.string(),B),u.array(B)]);L({id:G,jsonrpc:k,method:u.string(),params:x(Ae)});L({jsonrpc:k,method:u.string(),params:x(Ae)});u.object({id:G,jsonrpc:k,result:u.optional(u.unknown()),error:u.optional(ye)});const nt=L({id:G,jsonrpc:k,result:B}),rt=L({id:G,jsonrpc:k,error:ye});u.union([nt,rt]);var re=T.rpc.internal,at="Unspecified error message. This is a bug, please report it.";Ce(re);var ot="Unspecified server error.";function Ce(t,e=at){if(dt(t)){const i=t.toString();if(F(se,i))return se[i].message;if(lt(t))return ot}return e}function dt(t){return Number.isInteger(t)}function lt(t){return t>=-32099&&t<=-32e3}function ut(t){return Array.isArray(t)?t.map(e=>Z(e)?e:V(e)?ae(e):null):V(t)?ae(t):Z(t)?t:null}function ae(t){return Object.getOwnPropertyNames(t).reduce((e,i)=>{const s=t[i];return Z(s)&&(e[i]=s),e},{})}function ct(t){return V(t)&&F(t,"cause")&&V(t.cause)}var Se=class extends Error{constructor(t,e,i){var s=(...n)=>{super(...n)};if(!Number.isInteger(t))throw new Error('"code" must be an integer.');if(!e||typeof e!="string")throw new Error('"message" must be a non-empty string.');ct(i)?(s(e,{cause:i.cause}),F(this,"cause")||Object.assign(this,{cause:i.cause})):s(e),i!==void 0&&(this.data=i),this.code=t}serialize(){const t={code:this.code,message:this.message};return this.data!==void 0&&(t.data=this.data,je(this.data)&&(t.data.cause=ut(this.data.cause))),this.stack&&(t.stack=this.stack),t}toString(){return De(this.serialize(),pt,2)}},oe=class extends Se{constructor(t,e,i){if(!ht(t))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(t,e,i)}};function ht(t){return Number.isInteger(t)&&t>=1e3&&t<=4999}function pt(t,e){if(e!=="[Circular]")return e}var W={parse:t=>w(T.rpc.parse,t),invalidRequest:t=>w(T.rpc.invalidRequest,t),invalidParams:t=>w(T.rpc.invalidParams,t),methodNotFound:t=>w(T.rpc.methodNotFound,t),internal:t=>w(T.rpc.internal,t),server:t=>{if(!t||typeof t!="object"||Array.isArray(t))throw new Error("Ethereum RPC Server errors must provide single object argument.");const{code:e}=t;if(!Number.isInteger(e)||e>-32005||e<-32099)throw new Error('"code" must be an integer such that: -32099 <= code <= -32005');return w(e,t)},invalidInput:t=>w(T.rpc.invalidInput,t),resourceNotFound:t=>w(T.rpc.resourceNotFound,t),resourceUnavailable:t=>w(T.rpc.resourceUnavailable,t),transactionRejected:t=>w(T.rpc.transactionRejected,t),methodNotSupported:t=>w(T.rpc.methodNotSupported,t),limitExceeded:t=>w(T.rpc.limitExceeded,t)};function w(t,e){const[i,s]=mt(e);return new Se(t,i??Ce(t),s)}function mt(t){if(t){if(typeof t=="string")return[t];if(typeof t=="object"&&!Array.isArray(t)){const{message:e,data:i}=t;if(e&&typeof e!="string")throw new Error("Must specify string message.");return[e??void 0,i]}}return[]}const N={GOOGLE:"google",FACEBOOK:"facebook",TWITCH:"twitch",REDDIT:"reddit",DISCORD:"discord",EMAIL_PASSWORDLESS:"torus-auth0-email-passwordless"},de={[N.GOOGLE]:"tkey-google",[N.FACEBOOK]:"tkey-facebook",[N.TWITCH]:"tkey-twitch",[N.REDDIT]:"tkey-reddit",[N.DISCORD]:"tkey-discord",[N.EMAIL_PASSWORDLESS]:"tkey-auth0-email-passwordless"},A={MOONPAY:"moonpay",RAMPNETWORK:"rampnetwork",MERCURYO:"mercuryo",TRANSAK:"transak",BANXA:"banxa"},m={MAINNET:"mainnet",MATIC:"matic",BSC_MAINNET:"bsc_mainnet",AVALANCHE_MAINNET:"avalanche_mainnet",XDAI:"xdai",ARBITRUM_MAINNET:"arbitrum_mainnet",OPTIMISM_MAINNET:"optimism_mainnet"},ft={PRODUCTION:"production",DEVELOPMENT:"development",BINANCE:"binance",TESTING:"testing",LRC:"lrc",BETA:"beta",BNB:"bnb",POLYGON:"polygon",ALPHA:"alpha"},M={BOTTOM_LEFT:"bottom-left",TOP_LEFT:"top-left",BOTTOM_RIGHT:"bottom-right",TOP_RIGHT:"top-right"},gt=["ETH","USDT","USDC","TUSD","EOSDT","USD","DAI","GUSD","DKKT","PAX","ILS","RUB","BYN","EUR","GBP","JPY","KRW","PLN","MXN","AUD","BRL","CAD","CHF","KPW","LAK","LBP","LKR","XOF","CNHT","DOGE","UAH","TRY","HKD","XJP","SGD","USC","NZD","NGN","RUR","COP","GHS","EGP","IDR","BHD","CRC","PEN","AED","DOP","PKR","HUF","VND","XAR","LTC","RON","OMR","MYR","DKK","UGX","ZMW","SAR","SEK","GEL","RWF","IRR","TZS","CNY","VEF","BDT","HRK","CLP","THB","XAF","ARS","UYU","SZL","KZT","NOK","KES","PAB","INR","CZK","MAD","TWD","PHP","ZAR","BOB","CDF","DASH","VES","ISK","MWK","BAM","TTD","XRP","JOD","RSD","HNL","BGN","GTQ","BWP","XMR","MMK","QAR","AOA","KWD","MUR","WUSD","WEUR","WAVES","WTRY","LRD","LSL","LYD","AWG","MDL","BTO","EURS","CHFT","MKD","MNT","MOP","MRO","MVR","VOLLAR","CKUSD","KHR","VUV","BITCNY","QC","BBD","NAD","NPR","PGK","PYG","BIF","BMD","BND","XLM","BNB","SCR","BAT","CRO","HT","KCS","LEO","LINK","MKR","NPXS","OMG","REP","ZB","ZIL","ZRX","BCH","BZD","CUP","CVE","DJF","DZD","ERN","ETB","FJD","FKP","BUSD","ANCT","ALL","AMD","ANG","CNYX","IQD","UZS","TND","GGP","XAU","KGS","GIP","JMD","ZEC","USDP","BSV","EMC2","SNT","GTO","POWR","EUSD","EURT","BCY","BTS","ATM","BLOCKPAY","ARDR","AMP","B2X","BITGOLD","BITEUR","ATB","BITUSD","AGRS","DFXT","HIKEN","BIX","KNC","EOS","COB","COSS","BMH","NANO","BDG","BNT","XVG","LKK1Y","LKK","USDK","EURN","NZDT","JSE","GMD","GNF","GYD","YER","XPF","HTG","SLL","SOS","WST","SVC","SYP","NEO","KMF","JUMP","AYA","BLAST","WGR","BCN","BTG","URALS","INN","USDQ","CNH","HUSD","BKRW","NZDX","EURX","CADX","USDEX","JPYX","AUDX","VNDC","EON","GBPX","CHFX","USDJ","IDRT","USDS","USDN","BIDR","IDK","BSD","BTN","KYD","NIO","SBD","SDG","SHP","TOP","XCD","XCHF","CNYT","GYEN","ZUSD","GOLD","TRX","TRYB","PLATC","STRAX","UST","GLM","VAI","BRZ","DDRST","XAUT","MIM"],yt={[A.MOONPAY]:["AUD","BGN","BRL","CAD","CHF","CNY","COP","CZK","DKK","DOP","EGP","EUR","GBP","HKD","HRK","IDR","ILS","JPY","JOD","KES","KRW","KWD","LKR","MAD","MXN","MYR","NGN","NOK","NZD","OMR","PEN","PKR","PLN","RON","RUB","SEK","SGD","THB","TRY","TWD","USD","VND","ZAR"],[A.RAMPNETWORK]:["USD","EUR","GBP","BMD","BAM","BWP","BRL","BGN","COP","CRC","CZK","DKK","DOP","GEL","GTQ","HNL","HUF","ISK","INR","ILS","KZT","KES","KWD","LAK","MKD","MYR","MXN","MDL","MZN","NZD","NGN","PYG","PEN","PLN","RON","RSD","SGD","ZAR","LKR","SEK","CHF","TJS","THB","UYU"],[A.MERCURYO]:["EUR","USD","GBP","TRY","JPY","BRL","NGN","VND","MXN","KRW","PLN","SEK","CHF","CAD","CZK","DKK","BGN","HKD","AUD","INR"],[A.TRANSAK]:["ARS","AUD","BBD","BGN","BMD","BRL","CAD","CHF","CLP","CRC","CZK","DKK","DOP","EUR","FJD","FKP","GBP","GIP","HRK","HUF","IDR","ILS","ISK","JMD","JPY","KES","KRW","MDL","MXN","MYR","NOK","NZD","PEN","PHP","PLN","PYG","RON","SEK","SGD","THB","TRY","TZS","USD","ZAR"],[A.BANXA]:["AUD","CAD","CZK","DKK","EUR","GBP","HKD","JPY","NOK","NZD","NZD","PLN","RUB","SEK","SGD","TRY","USD"]},At=new Set(gt);function U(t){return yt[t].filter(i=>At.has(i))}const Ct={[A.MOONPAY]:{line1:"Credit/ Debit Card/ Apple Pay",line2:"4.5% or 5 USD",line3:"2,000€/day, 10,000€/mo",supportPage:"https://help.moonpay.io/en/",minOrderValue:24.99,maxOrderValue:5e4,validCurrencies:U(A.MOONPAY),validCryptoCurrenciesByChain:{[m.MAINNET]:[{value:"aave",display:"AAVE"},{value:"bat",display:"BAT"},{value:"dai",display:"DAI"},{value:"eth",display:"ETH"},{value:"mkr",display:"MKR"},{value:"matic",display:"MATIC"},{value:"usdt",display:"USDT"},{value:"uni",display:"UNI"},{value:"usdc",display:"USDC"},{value:"weth",display:"WETH"}],[m.MATIC]:[{value:"eth_polygon",display:"ETH"},{value:"matic_polygon",display:"MATIC"},{value:"usdc_polygon",display:"USDC"},{value:"usdt_polygon",display:"USDT"}],[m.BSC_MAINNET]:[{value:"bnb_bsc",display:"BNB"},{value:"busd_bsc",display:"BUSD"}],[m.AVALANCHE_MAINNET]:[{value:"avax_cchain",display:"AVAX"},{value:"usdc_cchain",display:"USDC"}],[m.ARBITRUM_MAINNET]:[{value:"eth_arbitrum",display:"ETH"},{value:"usdc_arbitrum",display:"USDC"}],[m.OPTIMISM_MAINNET]:[{value:"eth_optimism",display:"ETH"},{value:"usdc_optimism",display:"USDC"}]},includeFees:!0,api:!0,enforceMax:!1},[A.RAMPNETWORK]:{line1:"Debit Card/ <br>Apple Pay/ Bank transfer",line2:"0.49% - 2.9%",line3:"5,000€/purchase, 20,000€/mo",supportPage:"https://instant.ramp.network/",minOrderValue:50,maxOrderValue:2e4,validCurrencies:U(A.RAMPNETWORK),validCryptoCurrenciesByChain:{[m.MAINNET]:[{value:"ETH",display:"ETH"},{value:"DAI",display:"DAI"},{value:"BAT",display:"BAT"},{value:"USDC",display:"USDC"},{value:"USDT",display:"USDT"}],[m.MATIC]:[{value:"MATIC_BAT",display:"BAT"},{value:"MATIC_DAI",display:"DAI"},{value:"MATIC_MATIC",display:"MATIC"},{value:"MATIC_USDC",display:"USDC"},{value:"MATIC_USDT",display:"USDT"}],[m.AVALANCHE_MAINNET]:[{value:"AVAX_AVAX",display:"AVAX"},{value:"AVAX_USDC",display:"USDC"},{value:"AVAX_USDT",display:"USDT"}],[m.ARBITRUM_MAINNET]:[{value:"ARBITRUM_ETH",display:"ETH"},{value:"ARBITRUM_USDC.e	",display:"USDC"},{value:"ARBITRUM_USDT",display:"USDT"}],[m.OPTIMISM_MAINNET]:[{value:"OPTIMISM_DAI",display:"DAI"},{value:"OPTIMISM_OPTIMISM",display:"OPTIMISM"},{value:"OPTIMISM_USDC",display:"USDC"},{value:"OPTIMISM_USDT",display:"USDT"}],[m.BSC_MAINNET]:[{value:"BSC_BNB",display:"BNB"},{value:"BSC_BUSD",display:"BUSD"}]},includeFees:!0,api:!0,receiveHint:"walletTopUp.receiveHintRamp",enforceMax:!1},[A.MERCURYO]:{line1:"Credit/ Debit Card/ Apple Pay",line2:"3.95% or 4 USD",line3:"10,000€/day, 25,000€/mo",supportPage:"mailto:support@mercuryo.io",minOrderValue:30,maxOrderValue:5e3,validCurrencies:U(A.MERCURYO),validCryptoCurrenciesByChain:{[m.MAINNET]:[{value:"ETH",display:"ETH"},{value:"BAT",display:"BAT"},{value:"USDT",display:"USDT"},{value:"DAI",display:"DAI"}],[m.BSC_MAINNET]:[{value:"BNB",display:"BNB"},{value:"BUSD",display:"BUSD"},{value:"1INCH",display:"1INCH"}],[m.AVALANCHE_MAINNET]:[{value:"AVAX",display:"AVAX"}],[m.MATIC]:[{value:"MATIC",display:"MATIC"}]},includeFees:!0,api:!0,enforceMax:!1},[A.TRANSAK]:{line1:"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy",line2:"0.99% - 5.5% or 5 USD",line3:"$5,000/day, $28,000/mo",supportPage:"https://support.transak.com/hc/en-US",minOrderValue:30,maxOrderValue:500,validCurrencies:U(A.TRANSAK),validCryptoCurrenciesByChain:{[m.MAINNET]:[{value:"1INCH",display:"1INCH"},{value:"BAT",display:"BAT"},{value:"AAVE",display:"AAVE"},{value:"DAI",display:"DAI"},{value:"ETH",display:"ETH"},{value:"USDC",display:"USDC"},{value:"USDT",display:"USDT"}],[m.MATIC]:[{value:"BAT",display:"BAT"},{value:"AAVE",display:"AAVE"},{value:"DAI",display:"DAI"},{value:"MATIC",display:"MATIC"},{value:"USDC",display:"USDC"},{value:"USDT",display:"USDT"},{value:"WETH",display:"WETH"}],[m.BSC_MAINNET]:[{value:"BAT",display:"BAT"},{value:"BNB",display:"BNB"},{value:"BUSD",display:"BUSD"}],[m.AVALANCHE_MAINNET]:[{value:"AVAX",display:"AVAX"}],[m.OPTIMISM_MAINNET]:[{value:"ETH",display:"ETH"},{value:"USDC",display:"USDC"}],[m.ARBITRUM_MAINNET]:[{value:"USDC",display:"USDC"},{value:"ETH",display:"ETH"}]},includeFees:!0,enforceMax:!0},[A.BANXA]:{line1:"Debit Card/ <br>Apple Pay/ Bank transfer",line2:"0.49% - 2.9%",line3:"5,000€/purchase, 20,000€/mo",supportPage:"https://support.banxa.com",minOrderValue:20,maxOrderValue:15e3,validCurrencies:U(A.BANXA),validCryptoCurrenciesByChain:{[m.MAINNET]:[{value:"ETH",display:"ETH"},{value:"DAI",display:"DAI"},{value:"MKR",display:"MKR"},{value:"USDT",display:"USDT"},{value:"BUSD",display:"BUSD"},{value:"USDC",display:"USDC"},{value:"BAT",display:"BAT"},{value:"AAVE",display:"AAVE"},{value:"COMP",display:"COMP"},{value:"UNI",display:"UNI"}],[m.MATIC]:[{value:"MATIC",display:"MATIC"}]},includeFees:!0,enforceMax:!0}},St={en:{embed:{continue:"Continue",actionRequired:"Authorization required",pendingAction:"Click continue to proceed with your request in a popup",cookiesRequired:"Cookies Required",enableCookies:"Please enable cookies in your browser preferences to access Torus",clickHere:"More Info"}},de:{embed:{continue:"Fortsetzen",actionRequired:"Autorisierung erforderlich",pendingAction:"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren",cookiesRequired:"Cookies benötigt",enableCookies:"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen",clickHere:"Mehr Info"}},ja:{embed:{continue:"継続する",actionRequired:"認証が必要です",pendingAction:"続行をクリックして、ポップアップでリクエストを続行します",cookiesRequired:"必要なクッキー",enableCookies:"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。",clickHere:"詳しくは"}},ko:{embed:{continue:"계속하다",actionRequired:"승인 필요",pendingAction:"팝업에서 요청을 진행하려면 계속을 클릭하십시오.",cookiesRequired:"쿠키 필요",enableCookies:"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.",clickHere:"더 많은 정보"}},zh:{embed:{continue:"继续",actionRequired:"需要授权",pendingAction:"单击继续以在弹出窗口中继续您的请求",cookiesRequired:"必填Cookie",enableCookies:"请在您的浏览器首选项中启用cookie以访问Torus。",clickHere:"更多信息"}}};var b={supportedVerifierList:Object.values(N),paymentProviders:Ct,api:"https://api.tor.us",translations:St,prodTorusUrl:"",localStorageKeyPrefix:"torus-"};const O=t=>{const e=window.document.createElement("template"),i=t.trim();return e.innerHTML=i,e.content.firstChild},_=(t,e,i)=>{const s=n=>{i(n),t.removeListener(e,s)};t.on(e,s)};function we(t){return t!==null&&typeof t=="object"&&typeof t.pipe=="function"}function wt(t){return we(t)&&t.writable!==!1&&typeof t._write=="function"&&typeof t._writableState=="object"}function Tt(t){return we(t)&&t.readable!==!1&&typeof t._read=="function"&&typeof t._readableState=="object"}function It(t){return wt(t)&&Tt(t)}var f=Ne.getLogger("torus-embed"),I={errors:{disconnected:()=>"Torus: Lost connection to Torus.",permanentlyDisconnected:()=>"Torus: Disconnected from iframe. Page reload required.",sendSiteMetadata:()=>"Torus: Failed to send site metadata. This is an internal error, please report this bug.",unsupportedSync:t=>`Torus: The Torus Ethereum provider does not support synchronous methods like ${t} without a callback parameter.`,invalidDuplexStream:()=>"Must provide a Node.js-style duplex stream.",invalidOptions:(t,e)=>`Invalid options. Received: { maxEventListeners: ${t}, shouldSendMetadata: ${e} }`,invalidRequestArgs:()=>"Expected a single, non-array, object argument.",invalidRequestMethod:()=>"'args.method' must be a non-empty string.",invalidRequestParams:()=>"'args.params' must be an object or array if provided.",invalidLoggerObject:()=>"'args.logger' must be an object if provided.",invalidLoggerMethod:t=>`'args.logger' must include required method '${t}'.`},info:{connected:t=>`Torus: Connected to chain with ID "${t}".`},warnings:{enableDeprecation:'Torus: ""ethereum.enable()" is deprecated and may be removed in the future. Please use "ethereum.send("eth_requestAccounts")" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',sendDeprecation:`Torus: "ethereum.send(...)" is deprecated and may be removed in the future. Please use "ethereum.sendAsync(...)" or "ethereum.request(...)" instead.
For more information, see: https://eips.ethereum.org/EIPS/eip-1193`}};const{paymentProviders:le}=b,vt=(t,e)=>{const i={};if(!t)return{errors:i,isValid:!0};if(t&&!le[t])return i.provider="Invalid Provider",{errors:i,isValid:Object.keys(i).length===0};const s=le[t],n=e||{};if(n.fiatValue){const r=+parseFloat(n.fiatValue.toString())||0;r<s.minOrderValue&&(i.fiatValue="Requested amount is lower than supported"),r>s.maxOrderValue&&s.enforceMax&&(i.fiatValue="Requested amount is higher than supported")}if(n.selectedCurrency&&!s.validCurrencies.includes(n.selectedCurrency)&&(i.selectedCurrency="Unsupported currency"),n.selectedCryptoCurrency){const r=Object.values(s.validCryptoCurrenciesByChain).flat().map(d=>d.value),a=t===A.MOONPAY?n.selectedCryptoCurrency.toLowerCase():n.selectedCryptoCurrency;r&&!r.includes(a)&&(i.selectedCryptoCurrency="Unsupported cryptoCurrency")}return{errors:i,isValid:Object.keys(i).length===0}};function Et(){return(t,e,i)=>{(typeof t.method!="string"||!t.method)&&(e.error=W.invalidRequest({message:"The request 'method' must be a non-empty string.",data:C(C({},t||{}),{},{cause:"The request 'method' must be a non-empty string."})})),i(s=>{const{error:n}=e;return n&&f.error(`MetaMask - RPC Error: ${n.message}`,n),s()})}}function _t(t,e,i){let s=`MetaMask: Lost connection to "${t}".`;e!=null&&e.stack&&(s+=`
${e.stack}`),f.warn(s),i&&i.listenerCount("error")>0&&i.emit("error",s)}const P=()=>Math.random().toString(36).slice(2),Te=async(t,e)=>{let i,s;const n="5.0.0";let r=e.version||n;try{if((t==="binance"||t==="production")&&!e.version){let a;b.prodTorusUrl?a={data:b.prodTorusUrl}:a=await ge(`${b.api}/latestversion?name=@toruslabs/torus-embed&version=${n}`,{},{useAPIKey:!0}),r=a.data,b.prodTorusUrl=a.data}}catch(a){f.error(a,"unable to fetch latest version")}switch(f.info("version used: ",r),t){case"binance":i=`https://binance.tor.us/v${r}`,s="info";break;case"testing":i="https://testing.tor.us",s="debug";break;case"bnb":i="https://bnb.tor.us",s="error";break;case"polygon":i="https://polygon.tor.us",s="error";break;case"lrc":i="https://lrc.tor.us",s="debug";break;case"beta":i="https://beta.tor.us",s="debug";break;case"development":i="http://localhost:4050",s="debug";break;case"alpha":i="https://alpha.tor.us",s="debug";break;default:i=`https://app.tor.us/v${r}`,s="error";break}return{torusUrl:i,logLevel:s}},ue=()=>{let t=window.navigator.language||"en-US";const e=t.split("-");return t=Object.prototype.hasOwnProperty.call(b.translations,e[0])?e[0]:"en",t},bt=["eth_subscription"],Ie=()=>{},ce="directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375",Rt="directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315",he="directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450";function Dt(){const t=window.screenLeft!==void 0?window.screenLeft:window.screenX,e=window.screenTop!==void 0?window.screenTop:window.screenY,i=1200,s=700,n=window.innerWidth?window.innerWidth:document.documentElement.clientWidth?document.documentElement.clientWidth:window.screen.width,r=window.innerHeight?window.innerHeight:document.documentElement.clientHeight?document.documentElement.clientHeight:window.screen.height,a=1,d=Math.abs((n-i)/2/a+t),h=Math.abs((r-s)/2/a+e);return`titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${s/a},width=${i/a},top=${h},left=${d}`}z.defaultMaxListeners=100;const pe=function(t,e){let i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;return(s,n)=>s||n.error?e(s||n.error):!i||Array.isArray(n)?t(n):t(n.result)};class Y extends z{constructor(e){let{maxEventListeners:i=100,shouldSendMetadata:s=!0,jsonRpcStreamName:n="provider"}=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(super(),o(this,"chainId",void 0),o(this,"selectedAddress",void 0),o(this,"_rpcEngine",void 0),o(this,"networkVersion",void 0),o(this,"shouldSendMetadata",void 0),o(this,"isTorus",void 0),o(this,"tryPreopenHandle",void 0),o(this,"enable",void 0),o(this,"_state",void 0),o(this,"_jsonRpcConnection",void 0),!It(e))throw new Error(I.errors.invalidDuplexStream());this.isTorus=!0,this.setMaxListeners(i),this._state=C({},Y._defaultState),this.selectedAddress=null,this.networkVersion=null,this.chainId=null,this.shouldSendMetadata=s,this._handleAccountsChanged=this._handleAccountsChanged.bind(this),this._handleChainChanged=this._handleChainChanged.bind(this),this._handleUnlockStateChanged=this._handleUnlockStateChanged.bind(this),this._handleConnect=this._handleConnect.bind(this),this._handleDisconnect=this._handleDisconnect.bind(this),this._handleStreamDisconnect=this._handleStreamDisconnect.bind(this),this._sendSync=this._sendSync.bind(this),this._rpcRequest=this._rpcRequest.bind(this),this._initializeState=this._initializeState.bind(this),this.request=this.request.bind(this),this.send=this.send.bind(this),this.sendAsync=this.sendAsync.bind(this);const r=new Pe;ee(e,r,e,this._handleStreamDisconnect.bind(this,"MetaMask")),r.ignoreStream("phishing"),this.on("connect",()=>{this._state.isConnected=!0});const a=Me();ee(a.stream,r.createStream(n),a.stream,this._handleStreamDisconnect.bind(this,"MetaMask RpcProvider"));const d=new Ue;d.push(Oe()),d.push(Et()),d.push(a.middleware),this._rpcEngine=d,a.events.on("notification",h=>{const{method:c,params:l}=h;c==="wallet_accountsChanged"?this._handleAccountsChanged(l):c==="wallet_unlockStateChanged"?this._handleUnlockStateChanged(l):c==="wallet_chainChanged"?this._handleChainChanged(l):bt.includes(h.method)&&(this.emit("data",h),this.emit("notification",l.result),this.emit("message",{type:c,data:l}))})}isConnected(){return this._state.isConnected}async request(e){if(!e||typeof e!="object"||Array.isArray(e))throw W.invalidRequest({message:I.errors.invalidRequestArgs(),data:C(C({},e||{}),{},{cause:I.errors.invalidRequestArgs()})});const{method:i,params:s}=e;if(typeof i!="string"||i.length===0)throw W.invalidRequest({message:I.errors.invalidRequestMethod(),data:C(C({},e||{}),{},{cause:I.errors.invalidRequestArgs()})});if(s!==void 0&&!Array.isArray(s)&&(typeof s!="object"||s===null))throw W.invalidRequest({message:I.errors.invalidRequestParams(),data:C(C({},e||{}),{},{cause:I.errors.invalidRequestArgs()})});return new Promise((n,r)=>{this._rpcRequest({method:i,params:s},pe(n,r))})}sendAsync(e,i){this._rpcRequest(e,i)}async _initializeState(){try{const{accounts:e,chainId:i,isUnlocked:s,networkVersion:n}=await this.request({method:"wallet_getProviderState"});this.emit("connect",{chainId:i}),this._handleChainChanged({chainId:i,networkVersion:n}),this._handleUnlockStateChanged({accounts:e,isUnlocked:s}),this._handleAccountsChanged(e)}catch(e){f.error("MetaMask: Failed to get initial state. Please report this bug.",e)}finally{f.info("initialized state"),this._state.initialized=!0,this.emit("_initialized")}}_rpcRequest(e,i){let s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,n=i;const r=e;if(!Array.isArray(r)){if(r.jsonrpc||(r.jsonrpc="2.0"),r.method==="eth_accounts"||r.method==="eth_requestAccounts")n=(a,d)=>{this._handleAccountsChanged(d.result||[],r.method==="eth_accounts",s),i(a,d)};else if(r.method==="wallet_getProviderState"){this._rpcEngine.handle(e,n);return}}this.tryPreopenHandle(r,n)}send(e,i){return typeof e=="string"&&(!i||Array.isArray(i))?new Promise((s,n)=>{try{this._rpcRequest({method:e,params:i},pe(s,n,!1))}catch(r){n(r)}}):e&&typeof e=="object"&&typeof i=="function"?this._rpcRequest(e,i):this._sendSync(e)}_sendSync(e){let i;switch(e.method){case"eth_accounts":i=this.selectedAddress?[this.selectedAddress]:[];break;case"eth_coinbase":i=this.selectedAddress||null;break;case"eth_uninstallFilter":this._rpcRequest(e,Ie),i=!0;break;case"net_version":i=this.networkVersion||null;break;default:throw new Error(I.errors.unsupportedSync(e.method))}return{id:e.id,jsonrpc:e.jsonrpc,result:i}}_handleConnect(e){this._state.isConnected||(this._state.isConnected=!0,this.emit("connect",{chainId:e}),f.debug(I.info.connected(e)))}_handleDisconnect(e,i){if(this._state.isConnected||!this._state.isPermanentlyDisconnected&&!e){this._state.isConnected=!1;let s;e?(s=new oe(1013,i||I.errors.disconnected()),f.debug(s)):(s=new oe(1011,i||I.errors.permanentlyDisconnected()),f.error(s),this.chainId=null,this._state.accounts=null,this.selectedAddress=null,this._state.isUnlocked=!1,this._state.isPermanentlyDisconnected=!0),this.emit("disconnect",s)}}_handleStreamDisconnect(e,i){_t(e,i,this),this._handleDisconnect(!1,i?i.message:void 0)}_handleAccountsChanged(e){let i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,n=e;Array.isArray(n)||(f.error("MetaMask: Received non-array accounts parameter. Please report this bug.",n),n=[]);for(const r of e)if(typeof r!="string"){f.error("MetaMask: Received non-string account. Please report this bug.",e),n=[];break}Be(this._state.accounts,n)||(i&&Array.isArray(this._state.accounts)&&this._state.accounts.length>0&&!s&&f.error('MetaMask: "eth_accounts" unexpectedly updated accounts. Please report this bug.',n),this._state.accounts=n,this.emit("accountsChanged",n)),this.selectedAddress!==n[0]&&(this.selectedAddress=n[0]||null)}_handleChainChanged(){let{chainId:e,networkVersion:i}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(!e||!i){f.error("MetaMask: Received invalid network parameters. Please report this bug.",{chainId:e,networkVersion:i});return}i==="loading"?this._handleDisconnect(!0):(this._handleConnect(e),e!==this.chainId&&(this.chainId=e,this._state.initialized&&this.emit("chainChanged",this.chainId)))}_handleUnlockStateChanged(){let{accounts:e,isUnlocked:i}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(typeof i!="boolean"){f.error("MetaMask: Received invalid isUnlocked parameter. Please report this bug.",{isUnlocked:i});return}i!==this._state.isUnlocked&&(this._state.isUnlocked=i,this._handleAccountsChanged(e||[]))}}o(Y,"_defaultState",{accounts:null,isConnected:!1,isUnlocked:!1,initialized:!1,isPermanentlyDisconnected:!1,hasEmittedConnection:!1});class me extends z{constructor(e){let{url:i,target:s,features:n,timeout:r=3e4}=e;super(),o(this,"url",void 0),o(this,"target",void 0),o(this,"features",void 0),o(this,"window",void 0),o(this,"windowTimer",void 0),o(this,"iClosedWindow",void 0),o(this,"timeout",void 0),this.url=i,this.target=s||"_blank",this.features=n||Dt(),this.window=void 0,this.windowTimer=void 0,this.iClosedWindow=!1,this.timeout=r,this._setupTimer()}_setupTimer(){this.windowTimer=Number(setInterval(()=>{this.window&&this.window.closed&&(clearInterval(this.windowTimer),setTimeout(()=>{this.iClosedWindow||this.emit("close"),this.iClosedWindow=!1,this.window=void 0},this.timeout)),this.window===void 0&&clearInterval(this.windowTimer)},500))}open(){var e;this.window=window.open(this.url.href,this.target,this.features),(e=this.window)!==null&&e!==void 0&&e.focus&&this.window.focus()}close(){this.iClosedWindow=!0,this.window&&this.window.close()}redirect(e){e?window.location.replace(this.url.href):window.location.href=this.url.href}}function fe(t){return new Promise((e,i)=>{try{const s=document.createElement("img");s.onload=()=>e(!0),s.onerror=()=>e(!1),s.src=t}catch(s){i(s)}})}const Nt=t=>{const{document:e}=t,i=e.querySelector('head > meta[property="og:site_name"]');if(i)return i.content;const s=e.querySelector('head > meta[name="title"]');return s?s.content:e.title&&e.title.length>0?e.title:t.location.hostname};async function Pt(t){const{document:e}=t;let i=e.querySelector('head > link[rel="shortcut icon"]');return i&&await fe(i.href)||(i=Array.from(e.querySelectorAll('head > link[rel="icon"]')).find(s=>!!s.href),i&&await fe(i.href))?i.href:null}const Mt=async()=>({name:Nt(window),icon:await Pt(window)});async function Ut(t){try{const e=await Mt();t.handle({jsonrpc:"2.0",id:P(),method:"wallet_sendDomainMetadata",params:e},Ie)}catch(e){f.error({message:I.errors.sendSiteMetadata(),originalError:e})}}const Ot=["host","chainId","networkName"],Bt=["eth_sendTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","wallet_addEthereumChain","wallet_switchEthereumChain"];(async function(){try{if(typeof document>"u")return;const e=document.createElement("link"),{torusUrl:i}=await Te("production",{version:""});e.href=`${i}/popup`,e.crossOrigin="anonymous",e.type="text/html",e.rel="prefetch",e.relList&&e.relList.supports&&e.relList.supports("prefetch")&&document.head.appendChild(e)}catch(e){f.warn(e)}})();class Lt{constructor(){let{buttonPosition:e=M.BOTTOM_LEFT,buttonSize:i=56,modalZIndex:s=99999,apiKey:n="torus-default"}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};o(this,"buttonPosition",M.BOTTOM_LEFT),o(this,"buttonSize",void 0),o(this,"torusUrl",void 0),o(this,"torusIframe",void 0),o(this,"styleLink",void 0),o(this,"isLoggedIn",void 0),o(this,"isInitialized",void 0),o(this,"torusWidgetVisibility",void 0),o(this,"torusAlert",void 0),o(this,"apiKey",void 0),o(this,"modalZIndex",void 0),o(this,"alertZIndex",void 0),o(this,"torusAlertContainer",void 0),o(this,"isIframeFullScreen",void 0),o(this,"whiteLabel",void 0),o(this,"requestedVerifier",void 0),o(this,"currentVerifier",void 0),o(this,"embedTranslations",void 0),o(this,"ethereum",void 0),o(this,"provider",void 0),o(this,"communicationMux",void 0),o(this,"isLoginCallback",void 0),o(this,"paymentProviders",b.paymentProviders),o(this,"loginHint",""),o(this,"useWalletConnect",void 0),o(this,"isCustomLogin",!1),this.buttonPosition=e,this.buttonSize=i,this.torusUrl="",this.isLoggedIn=!1,this.isInitialized=!1,this.torusWidgetVisibility=!0,this.requestedVerifier="",this.currentVerifier="",this.apiKey=n,He(n),this.modalZIndex=s,this.alertZIndex=s+1e3,this.isIframeFullScreen=!1}async init(){let{buildEnv:e=ft.PRODUCTION,enableLogging:i=!1,network:s={host:"mainnet",chainId:null,networkName:"",blockExplorer:"",ticker:"",tickerName:""},loginConfig:n={},showTorusButton:r=!0,integrity:a={version:""},whiteLabel:d,useWalletConnect:h=!1,mfaLevel:c="default"}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(this.isInitialized)throw new Error("Already initialized");const{torusUrl:l,logLevel:p}=await Te(e,a);f.info(l,"url loaded"),this.torusUrl=l,this.whiteLabel=d,this.useWalletConnect=h,this.isCustomLogin=!!(n&&Object.keys(n).length>0)||!!(d&&Object.keys(d).length>0),f.setDefaultLevel(p),i?f.enableAll():f.disableAll(),this.torusWidgetVisibility=r;const g=new URL(l);g.pathname.endsWith("/")?g.pathname+="popup":g.pathname+="/popup",g.hash=`#isCustomLogin=${this.isCustomLogin}`,this.torusIframe=O(`<iframe
        id="torusIframe"
        allow=${h?"camera":""}
        class="torusIframe"
        src="${g.href}"
        style="display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;
        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}"
      ></iframe>`),this.torusAlertContainer=O('<div id="torusAlertContainer"></div>'),this.torusAlertContainer.style.display="none",this.torusAlertContainer.style.setProperty("z-index",this.alertZIndex.toString());const y=window.document.createElement("link");y.setAttribute("rel","stylesheet"),y.setAttribute("type","text/css"),y.setAttribute("href",`${l}/css/widget.css`),this.styleLink=y;const{defaultLanguage:S=ue(),customTranslations:E={}}=this.whiteLabel||{},D=Le(b.translations,E)[S]||b.translations[ue()];return this.embedTranslations=D.embed,new Promise((ve,Ee)=>{this.torusIframe.onload=async()=>{this._setupWeb3();const J=this.communicationMux.getStream("init_stream");J.on("data",_e=>{const{name:be,data:Re,error:Q}=_e;be==="init_complete"&&Re.success?(this.isInitialized=!0,this._displayIframe(this.isIframeFullScreen),ve(void 0)):Q&&Ee(new Error(Q))}),J.write({name:"init_stream",data:{loginConfig:n,whiteLabel:this.whiteLabel,buttonPosition:this.buttonPosition,buttonSize:this.buttonSize,torusWidgetVisibility:this.torusWidgetVisibility,apiKey:this.apiKey,network:s,mfaLevel:c}})},window.document.head.appendChild(this.styleLink),window.document.body.appendChild(this.torusIframe),window.document.body.appendChild(this.torusAlertContainer)})}login(){let{verifier:e="",login_hint:i=""}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(!this.isInitialized)throw new Error("Call init() first");return this.requestedVerifier=e,this.loginHint=i,this.ethereum.enable()}logout(){return new Promise((e,i)=>{if(!this.isLoggedIn){i(new Error("User has not logged in yet"));return}this.communicationMux.getStream("logout").write({name:"logOut"});const n=this.communicationMux.getStream("status");_(n,"data",a=>{a.loggedIn?i(new Error("Some Error Occured")):(this.isLoggedIn=!1,this.currentVerifier="",this.requestedVerifier="",e())})})}async cleanUp(){this.isLoggedIn&&await this.logout(),this.clearInit()}clearInit(){function e(i){return i instanceof Element||i instanceof HTMLDocument}e(this.styleLink)&&window.document.body.contains(this.styleLink)&&(this.styleLink.remove(),this.styleLink=void 0),e(this.torusIframe)&&window.document.body.contains(this.torusIframe)&&(this.torusIframe.remove(),this.torusIframe=void 0),e(this.torusAlertContainer)&&window.document.body.contains(this.torusAlertContainer)&&(this.torusAlert=void 0,this.torusAlertContainer.remove(),this.torusAlertContainer=void 0),this.isInitialized=!1}hideTorusButton(){this.torusWidgetVisibility=!1,this._sendWidgetVisibilityStatus(!1),this._displayIframe()}showTorusButton(){this.torusWidgetVisibility=!0,this._sendWidgetVisibilityStatus(!0),this._displayIframe()}setProvider(e){let{host:i="mainnet",chainId:s=null,networkName:n=""}=e,r=Ge(e,Ot);return new Promise((a,d)=>{const h=this.communicationMux.getStream("provider_change");_(h,"data",p=>{const g=p,{err:y,success:S}=g.data;f.info(g),y?d(y):S?a():d(new Error("some error occurred"))});const l=P();this._handleWindow(l,{target:"_blank",features:ce}),h.write({name:"show_provider_change",data:{network:C({host:i,chainId:s,networkName:n},r),preopenInstanceId:l,override:!1}})})}showWallet(e){let i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const s=this.communicationMux.getStream("show_wallet"),n=e?`/${e}`:"";s.write({name:"show_wallet",data:{path:n}}),_(s,"data",a=>{const d=a;if(d.name==="show_wallet_instance"){const{instanceId:h}=d.data,c=new URL(`${this.torusUrl}/wallet${n}`);c.searchParams.append("integrity","true"),c.searchParams.append("instanceId",h),Object.keys(i).forEach(p=>{c.searchParams.append(p,i[p])}),c.hash=`#isCustomLogin=${this.isCustomLogin}`,new me({url:c,features:Rt}).open()}})}async getPublicAddress(e){let{verifier:i,verifierId:s,isExtended:n=!1}=e;if(!b.supportedVerifierList.includes(i)||!de[i])throw new Error("Unsupported verifier");const r=i,a=de[i],d=new URL("https://api.tor.us/lookup/torus");return d.searchParams.append("verifier",a),d.searchParams.append("verifierId",s),d.searchParams.append("walletVerifier",r),d.searchParams.append("network","mainnet"),d.searchParams.append("isExtended",n.toString()),ge(d.href,{headers:{"Content-Type":"application/json; charset=utf-8"}},{useAPIKey:!0})}getUserInfo(e){return new Promise((i,s)=>{if(this.isLoggedIn){const n=this.communicationMux.getStream("user_info_access");n.write({name:"user_info_access_request"}),_(n,"data",a=>{const d=a,{name:h,data:{approved:c,payload:l,rejected:p,newRequest:g}}=d;if(h==="user_info_access_response"){if(c)i(l);else if(p)s(new Error("User rejected the request"));else if(g){const y=this.communicationMux.getStream("user_info");_(y,"data",R=>{const D=R;D.name==="user_info_response"&&(D.data.approved?i(D.data.payload):s(new Error("User rejected the request")))});const E=P();this._handleWindow(E,{target:"_blank",features:ce}),y.write({name:"user_info_request",data:{message:e,preopenInstanceId:E}})}}})}else s(new Error("User has not logged in yet"))})}initiateTopup(e,i){return new Promise((s,n)=>{if(this.isInitialized){const{errors:r,isValid:a}=vt(e,i);if(!a){n(new Error(JSON.stringify(r)));return}const d=this.communicationMux.getStream("topup");_(d,"data",l=>{const p=l;p.name==="topup_response"&&(p.data.success?s(p.data.success):n(new Error(p.data.error)))});const c=P();this._handleWindow(c),d.write({name:"topup_request",data:{provider:e,params:i,preopenInstanceId:c}})}else n(new Error("Torus is not initialized yet"))})}async loginWithPrivateKey(e){const{privateKey:i,userInfo:s}=e;return new Promise((n,r)=>{if(this.isInitialized){if(Buffer.from(i,"hex").length!==32){r(new Error("Invalid private key, Please provide a 32 byte valid secp25k1 private key"));return}const a=this.communicationMux.getStream("login_with_private_key");_(a,"data",h=>{const c=h;c.name==="login_with_private_key_response"&&(c.data.success?n(c.data.success):r(new Error(c.data.error)))}),a.write({name:"login_with_private_key_request",data:{privateKey:i,userInfo:s}})}else r(new Error("Torus is not initialized yet"))})}async showWalletConnectScanner(){if(!this.useWalletConnect)throw new Error("Set `useWalletConnect` as true in init function options to use wallet connect scanner");return new Promise((e,i)=>{if(this.isLoggedIn){const s=this.communicationMux.getStream("wallet_connect_stream");_(s,"data",r=>{const a=r;a.name==="wallet_connect_stream_res"&&(a.data.success?e(a.data.success):i(new Error(a.data.error)),this._displayIframe())}),s.write({name:"wallet_connect_stream_req"}),this._displayIframe(!0)}else i(new Error("User has not logged in yet"))})}_handleWindow(e){let{url:i,target:s,features:n}=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(e){const r=this.communicationMux.getStream("window"),a=new URL(i||`${this.torusUrl}/redirect?preopenInstanceId=${e}`);a.hash?a.hash+=`&isCustomLogin=${this.isCustomLogin}`:a.hash=`#isCustomLogin=${this.isCustomLogin}`;const d=new me({url:a,target:s,features:n});if(d.open(),!d.window){this._createPopupBlockAlert(e,a.href);return}r.write({name:"opened_window",data:{preopenInstanceId:e}});const h=c=>{let{preopenInstanceId:l,close:p}=c;l===e&&p&&(d.close(),r.removeListener("data",h))};r.on("data",h),d.once("close",()=>{r.write({data:{preopenInstanceId:e,closed:!0}}),r.removeListener("data",h)})}}_setEmbedWhiteLabel(e){const{theme:i}=this.whiteLabel||{};if(i){const{isDark:s=!1,colors:n={}}=i;s&&e.classList.add("torus-dark"),n.torusBrand1&&e.style.setProperty("--torus-brand-1",n.torusBrand1),n.torusGray2&&e.style.setProperty("--torus-gray-2",n.torusGray2)}}_getLogoUrl(){var e;let i=`${this.torusUrl}/images/torus_icon-blue.svg`;if((e=this.whiteLabel)!==null&&e!==void 0&&(e=e.theme)!==null&&e!==void 0&&e.isDark){var s;i=((s=this.whiteLabel)===null||s===void 0?void 0:s.logoLight)||i}else{var n;i=((n=this.whiteLabel)===null||n===void 0?void 0:n.logoDark)||i}return i}_sendWidgetVisibilityStatus(e){this.communicationMux.getStream("torus-widget-visibility").write({data:e})}_displayIframe(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;const i={},s=this.buttonSize+14;if(e)i.display="block",i.width="100%",i.height="100%",i.top="0px",i.right="0px",i.left="0px",i.bottom="0px";else switch(i.display=this.torusWidgetVisibility?"block":"none",i.height=`${s}px`,i.width=`${s}px`,this.buttonPosition){case M.TOP_LEFT:i.top="0px",i.left="0px",i.right="auto",i.bottom="auto";break;case M.TOP_RIGHT:i.top="0px",i.right="0px",i.left="auto",i.bottom="auto";break;case M.BOTTOM_RIGHT:i.bottom="0px",i.right="0px",i.top="auto",i.left="auto";break;case M.BOTTOM_LEFT:default:i.bottom="0px",i.left="0px",i.top="auto",i.right="auto";break}Object.assign(this.torusIframe.style,i),this.isIframeFullScreen=e}_setupWeb3(){f.info("setupWeb3 running");const e=new te({name:"embed_metamask",target:"iframe_metamask",targetWindow:this.torusIframe.contentWindow,targetOrigin:new URL(this.torusUrl).origin}),i=new te({name:"embed_comm",target:"iframe_comm",targetWindow:this.torusIframe.contentWindow,targetOrigin:new URL(this.torusUrl).origin}),s=new Y(e),n=l=>{const p=s[l];s[l]=function(y){if(y&&y==="eth_requestAccounts")return s.enable();for(var S=arguments.length,E=new Array(S>1?S-1:0),R=1;R<S;R++)E[R-1]=arguments[R];return p.apply(this,[y,...E])}};n("send"),n("sendAsync"),s.enable=()=>new Promise((l,p)=>{s.sendAsync({jsonrpc:"2.0",id:P(),method:"eth_requestAccounts",params:[]},(g,y)=>{const{result:S}=y||{};if(g)setTimeout(()=>{p(g)},50);else if(Array.isArray(S)&&S.length>0){const E=()=>{if(this.requestedVerifier!==""&&this.currentVerifier!==this.requestedVerifier){const{requestedVerifier:R}=this;this.logout().then(D=>{this.requestedVerifier=R,this._showLoginPopup(!0,l,p)}).catch(D=>p(D))}else l(S)};this.isLoggedIn?E():this.isLoginCallback=E}else this._showLoginPopup(!0,l,p)})}),s.tryPreopenHandle=(l,p)=>{const g=l;if(!Array.isArray(g)&&Bt.includes(g.method)){const y=P();this._handleWindow(y,{target:"_blank",features:he}),g.preopenInstanceId=y}s._rpcEngine.handle(g,p)};const r=new Proxy(s,{deleteProperty:()=>!0});this.ethereum=r;const a=ke(i);this.communicationMux=a,a.getStream("window").on("data",l=>{l.name==="create_window"&&this._createPopupBlockAlert(l.data.preopenInstanceId,l.data.url)}),a.getStream("widget").on("data",l=>{const{data:p}=l;this._displayIframe(p)}),a.getStream("status").on("data",l=>{l.loggedIn?(this.isLoggedIn=l.loggedIn,this.currentVerifier=l.verifier):this._displayIframe(),this.isLoginCallback&&(this.isLoginCallback(),delete this.isLoginCallback)}),this.provider=r,this.provider.shouldSendMetadata&&Ut(this.provider._rpcEngine),s._initializeState(),f.debug("Torus - injected provider")}_showLoginPopup(e,i,s){const n=a=>{const d=a,{err:h,selectedAddress:c}=d;h?(f.error(h),s&&s(h)):i&&i([c]),this.isIframeFullScreen&&this._displayIframe()},r=this.communicationMux.getStream("oauth");if(!this.requestedVerifier)this._displayIframe(!0),_(r,"data",n),r.write({name:"oauth_modal",data:{calledFromEmbed:e}});else{_(r,"data",n);const a=P();this._handleWindow(a),r.write({name:"oauth",data:{calledFromEmbed:e,verifier:this.requestedVerifier,preopenInstanceId:a,login_hint:this.loginHint}})}}_createPopupBlockAlert(e,i){const s=this._getLogoUrl(),n=O(`<div id="torusAlert" class="torus-alert--v2"><div id="torusAlert__logo"><img src="${s}" /></div><div><h1 id="torusAlert__title">${this.embedTranslations.actionRequired}</h1><p id="torusAlert__desc">${this.embedTranslations.pendingAction}</p></div></div>`),r=O(`<div><a id="torusAlert__btn">${this.embedTranslations.continue}</a></div>`),a=O('<div id="torusAlert__btn-container"></div>');a.appendChild(r),n.appendChild(a),this._setEmbedWhiteLabel(n),this.torusAlertContainer.style.display="block",this.torusAlertContainer.appendChild(n),r.addEventListener("click",()=>{this._handleWindow(e,{url:i,target:"_blank",features:he}),n.remove(),this.torusAlertContainer.children.length===0&&(this.torusAlertContainer.style.display="none")})}}class Ht extends Ke{constructor(e={}){super(e),o(this,"name",H.TORUS_EVM),o(this,"adapterNamespace",We.EIP155),o(this,"currentChainNamespace",Ve.EIP155),o(this,"type",xe.EXTERNAL),o(this,"status",v.NOT_READY),o(this,"torusInstance",null),o(this,"torusWalletOptions",void 0),o(this,"initParams",void 0),o(this,"loginSettings",{}),this.torusWalletOptions=e.adapterSettings||{},this.initParams=e.initParams||{},this.loginSettings=e.loginSettings||{}}get provider(){return this.status!==v.NOT_READY&&this.torusInstance?this.torusInstance.provider:null}set provider(e){throw new Error("Not implemented")}async init(e={}){await super.init(e),super.checkInitializationRequirements();const{chainId:i,blockExplorerUrl:s,displayName:n,rpcTarget:r,ticker:a,tickerName:d}=this.chainConfig,h={chainId:Number.parseInt(i,16),host:r,blockExplorer:s,networkName:n,ticker:a,tickerName:d};this.torusInstance=new Lt(this.torusWalletOptions),j.debug("initializing torus evm adapter init"),await this.torusInstance.init(C(C({showTorusButton:!1},this.initParams),{},{network:h})),this.status=v.READY,this.emit(X.READY,H.TORUS_EVM);try{j.debug("initializing torus evm adapter"),e.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(c){j.error("Failed to connect with torus evm provider",c),this.emit(X.ERRORED,c)}}async connect(){if(super.checkConnectionRequirements(),!this.torusInstance)throw K.notReady("Torus wallet is not initialized");this.status=v.CONNECTING,this.emit(X.CONNECTING,{adapter:H.TORUS_EVM});try{await this.torusInstance.login(this.loginSettings);const e=await this.torusInstance.provider.request({method:"eth_chainId"});if(e&&parseInt(e)!==parseInt(this.chainConfig.chainId,16)){const{chainId:i,blockExplorerUrl:s,displayName:n,rpcTarget:r,ticker:a,tickerName:d}=this.chainConfig,h={chainId:Number.parseInt(i,16),host:r,blockExplorer:s,networkName:n,tickerName:d,ticker:a};await this.torusInstance.setProvider(C({},h));const c=await this.torusInstance.ethereum.request({method:"eth_chainId"});if(c&&parseInt(c)!==parseInt(this.chainConfig.chainId,16))throw K.fromCode(5e3,`Not connected to correct chainId. Expected: ${this.chainConfig.chainId}, Current: ${c}`)}return this.status=v.CONNECTED,this.torusInstance.showTorusButton(),this.emit(v.CONNECTED,{adapter:H.TORUS_EVM,reconnected:this.rehydrated}),this.provider}catch(e){throw this.status=v.READY,this.rehydrated=!1,this.emit(v.ERRORED,e),e instanceof qe?e:ie.connectionError("Failed to login with torus wallet",e)}}async disconnect(e={cleanup:!1}){if(await super.disconnectSession(),!this.torusInstance)throw K.notReady("Torus wallet is not initialized");await this.torusInstance.logout(),this.torusInstance.hideTorusButton(),e.cleanup?(this.status=v.NOT_READY,this.torusInstance=null):this.status=v.READY,await super.disconnect()}async getUserInfo(){if(this.status!==v.CONNECTED)throw ie.notConnectedError("Not connected with wallet");if(!this.torusInstance)throw K.notReady("Torus wallet is not initialized");return await this.torusInstance.getUserInfo("")}async addChain(e,i=!1){super.checkAddChainRequirements(e,i),this.addChainConfig(e)}async switchChain(e,i=!1){var s;super.checkSwitchChainRequirements(e,i);const n=this.getChainConfig(e.chainId);await((s=this.torusInstance)===null||s===void 0?void 0:s.setProvider({host:n.rpcTarget,chainId:parseInt(n.chainId,16),networkName:n.displayName,blockExplorer:n.blockExplorerUrl,ticker:n.ticker,tickerName:n.tickerName})),this.setAdapterSettings({chainConfig:this.getChainConfig(e.chainId)})}async enableMFA(){throw new Error("Method Not implemented")}}export{Ht as TorusWalletAdapter};
